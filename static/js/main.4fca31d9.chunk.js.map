{"version":3,"sources":["images/profile.jpg","components/Display.js","App.js","reportWebVitals.js","index.js"],"names":["Display","click","App","useState","count","setCount","name","setName","className","src","profile","alt","onClick","prevCount","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAAe,MAA0B,oC,eCqB1BA,MAlBf,YAA0B,IAARC,EAAO,EAAPA,MACd,OAEG,aADC,CACD,qBAEEA,KCoDMC,MArDf,WAEE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAWA,EAAqBF,mBAAS,uBAA9B,mBAAOG,EAAP,KAAYC,EAAZ,KAWA,OACE,mCACA,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKC,EAASC,IAAI,qBAGvB,qCAEE,qBAAKH,UAAU,QAAf,SAAuB,cAAC,EAAD,CAASP,MAAOK,MAEvC,sBAAKE,UAAU,MAAf,UACE,wBAAQI,QAfC,WACfL,EAAQ,wBAcF,kBAEA,wBAAQK,QAtBG,WACjBL,EAAQ,6BAqBF,uBAIF,iCAAOH,EAAM,mBAAGQ,QAnCtB,WACEP,GAAS,SAAAQ,GAAS,OAAIA,EAAY,MAkCSL,UAAU,iBAAjD,OAEA,mBAAGM,KAAK,2DAA2DC,OAAO,SAASC,IAAI,aAAvF,SAAoG,mBAAGR,UAAU,yBACjH,oBAAGM,KAAK,gCAAgCC,OAAO,SAASC,IAAI,aAA5D,cAA0E,mBAAGR,UAAU,2BCvChFS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4fca31d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile.c3846d52.jpg\";","import React from \"react\"; \r\n\r\n\r\nfunction Display({click}){ //click is the props variable that holds name that is part of the state hook. Make sure that is has curley braces!!!!\r\n    return( \r\n        // Remember that everything in the function needs to be in empty brackets or a div\r\n       <>   \r\n       \r\n        {click}\r\n           {/* releases name variable which holds the two functions to update the state  */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Display","import profile from \"./images/profile.jpg\";\nimport './App.css';\nimport Display from \"./components/Display\"; //only needed the one ./ not ../\nimport {useState} from \"react\";\n\n//--------------------------------------Counter---------------------\n\nfunction App() {\n\n  const [count,setCount]= useState(0); \n  /*count is the state and setCount is the item that allows us to update the current state \n  useState= 0 starts the initial state as 0*/\n\n  function increaseCount(){ \n    setCount(prevCount => prevCount + 1)\n  }\n  /*this function says the updated function (setCount) will take the previous count and add 1 to that*/ \n\n  /*-----------------button function---------------------------------*/ \n\n  const [name,setName]=useState(\"My name is Danielle\") //This is the state hook. What's in the parentheses is the initial state\n\n  const clickSkills =()=>{ //This is the function for when skills is clicked\n    setName(\"I'm a Frontend Developer\")\n\n  }\n\n  const clickName =()=>{ //This is the funciton for when name is clicked\n    setName(\"My name is Danielle\")\n  }\n\n  return (\n    <> \n    <div className=\"card\">\n      <img src={profile} alt=\"Danielle profile\"/> \n\n      \n      <h1>Hi!</h1>\n    \n        <div className=\"click\"><Display click={name} /></div>\n\n        <div className=\"btn\">\n          <button onClick={clickName}>Name</button>\n          {/* calling the clickName function above when button is clicked */}\n          <button onClick={clickSkills}>Skills</button>\n          {/* calling the clickSkills function when button is clicked */}\n        </div>\n\n        <span>{count}<i onClick={increaseCount}className=\"fas fa-heart\"></i> </span>\n        {/* calling increaseCount function when heart is clicked */}\n        <a href=\"https://www.linkedin.com/in/danielle-prioleau-8020b7161/\" target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-linkedin-in\"></i></a>\n        <a href=\"https://github.com/dkprioleau\" target=\"_blank\" rel=\"noreferrer\"> <i className=\"fab fa-github\"></i></a>\n    \n    </div>\n\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}